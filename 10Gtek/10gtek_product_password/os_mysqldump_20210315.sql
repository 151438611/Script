-- MySQL dump 10.18  Distrib 10.3.27-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: os
-- ------------------------------------------------------
-- Server version	10.3.27-MariaDB-0+deb10u1-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Position to start replication or point-in-time recovery from
--

-- CHANGE MASTER TO MASTER_LOG_FILE='master_bin.000117', MASTER_LOG_POS=387;

--
-- GTID to start replication from
--

-- SET GLOBAL gtid_slave_pos='0-5-1266498';

--
-- Current Database: `os`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `os` /*!40100 DEFAULT CHARACTER SET utf8mb4 */;

USE `os`;

--
-- Table structure for table `Record`
--

DROP TABLE IF EXISTS `Record`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Record` (
  `OS` varchar(10) NOT NULL DEFAULT 'Linux',
  `Type` varchar(10) NOT NULL DEFAULT '使用技巧',
  `Ask` varchar(50) NOT NULL,
  `Question` text NOT NULL,
  PRIMARY KEY (`Ask`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Record`
--

LOCK TABLES `Record` WRITE;
/*!40000 ALTER TABLE `Record` DISABLE KEYS */;
INSERT INTO `Record` VALUES ('Linux','使用技巧','awk命令','awk中引用外部变量方法：使用双引号包含单引号 \" \' $str \' \"  <br>\r\nawk 内置变量：FS或-F分隔符(默认空格); NR当前行数(从1开始); NF字段个数 <br>\r\nawk \'$11==\"TP-LINK_LSF\" && $7~\"6\" {print $11,$7}\' ap.log 多条件处理 <br>\r\nawk \'/sender/ && /Mbits/sec/ {if($8 == \"Gbits/sec\"){print 12 / 5} else {print $7}}\' 可进行小数运算(expr仅能整数运算) <br>\r\nawk -F\"[ :	]\" \'{print $3}\' ap.log 指定多个分隔符;用空格、冒号和制表符分隔 <br>\r\nawk \'{IGNORECASE=1}/mcu/{print $0}\' old.txt IGNORECASE设置非零时,忽略大小写 <br>\r\nawk \'NR==1{print $0}\' ap.log 指定输出首行; 若提取最后1行第2列:awk \'END {print $2}\' ap.log <br>\r\necho 0001 | awk \'{print int($0)}\' 去除数字前面的零 <br>\r\necho 10 | awk \'{printf(\"%04d\",$0)}\' 将指定长度的字符前填充零: <br>\r\nawk -F : \'BEGIN{print \"user , shell\"} {print $1\" , \"$7} END{print \"end_off\"}\' /etc/passwd'),('Linux','使用技巧','basename和dirname命令','basename 、dirname 命令：获取路径的文件名与目录名'),('Linux','使用技巧','case语法','case 语法简写,多个判断：case $a in 1|2) echo \"1-2-yes\" ;; 3) echo \"3-no\" ;; *) echo \"yes/no\" ;; esac'),('Linux','使用技巧','cat命令','cat -n将每行前加行号显示(包括空行); cat -b将每行非空行前加行号显示'),('Linux','使用技巧','Centos 7 yum本地源配置','[root@centos7 ~]# cat /etc/yum.repos.d/centos_local.repo <br>\r\n[local] <br>\r\nname=Centos_local_repo <br>\r\nbaseurl=file:///mnt              # 前面的file://是协议，后面的/mnt是光盘挂载点 <br>\r\nenabled=1   <br>\r\ngpgcheck=0 '),('Linux','网络源配置','Centos 7 yum网络源配置','[root@centos7 ~]# cat /etc/yum.repos.d/centos_epel_webtatic.repo<br>\r\n[base]<br>\r\nname=CentOS-Base-mirrors.aliyun.com<br>\r\nfailovermethod=priority<br>\r\nbaseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/<br>\r\nenabled=1<br>\r\ngpgcheck=1<br>\r\ngpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br>\r\n[updates]<br>\r\nname=CentOS-Updates-mirrors.aliyun.com<br>\r\nfailovermethod=priority<br>\r\nbaseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/<br>\r\nenabled=1<br>\r\ngpgcheck=1<br>\r\ngpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br>\r\n[extras]<br>\r\nname=CentOS-$releasever - Extras - mirrors.aliyun.com<br>\r\nfailovermethod=priority<br>\r\nbaseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/<br>\r\nenabled=1<br>\r\ngpgcheck=1<br>\r\ngpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br>\r\n[epel]<br>\r\nname=Extra Packages for Enterprise Linux 7 - $basearch<br>\r\nbaseurl=http://mirrors.aliyun.com/epel/7/$basearch<br>\r\nfailovermethod=priority<br>\r\nenabled=1<br>\r\ngpgcheck=0<br>\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7<br>\r\n[webtatic]<br>\r\nname=Webtatic Repository EL7<br>\r\nbaseurl=http://repo.webtatic.com/yum/el7/$basearch/<br>\r\nfailovermethod=priority<br>\r\nenabled=1<br>\r\ngpgcheck=0<br>\r\ngpgkey=http://mirror.webtatic.com/yum/RPM-GPG-KEY-webtatic-el7<br>'),('Linux','使用技巧','Centos rpm包管理工具','rpm选项：-i表示install安装，-e表示erase删除，-U表示upgrade升级，-v表示显示过程，-h表示显示进度，--nodeps不检查依赖关系，-a表示all所有，-q表示query查询，-f表示指定file，-l表示list列表，-i表示info信息 <br>\r\nrpm -ivh --nodeps Package.rpm	# 安装软件包 <br>\r\nrpm -Uvh Package.rpm	# 升级软件包 <br>\r\nrpm -e PackageName	# 卸载软件包，并卸载相关依赖包(某些依赖包也被其他软件依赖，卸载后其他软件将无法使用) <br>\r\nrpm -e --nodeps --allmatches PackageName	# 仅卸载所有匹配名字的软件包(不同版本)，不卸载依赖包	 <br>\r\nrpm -q PackageName	# 查询系统是否安装指定软件包 或 rpm -qa | grep PackageName <br>\r\nrpm -qf /sbin/ether-wake	# 查询指定文件/命令(绝对路径)由哪个软件包提供 <br>\r\nrpm -qi PackageName	# 显示已安装软件包的详细信息(版本、描述、大小) <br>\r\nrpm -ql PackageName	# 显示已安装软件包所生成的所有文件 <br>\r\nrpm -qc PackageName	# 显示已安装软件包所生成的配置文件 <br>'),('Linux','使用技巧','Centos yum包管理工具','# yum 安装、更新、卸载软件包	YUM---Yellow dog Updater Modified; dnf和yum使用方法一致 <br>\r\nyum -y install PackageName	# 安装软件包，自动安装依赖包，并自动确认 <br>\r\nyum {update | upgrade} PackageName	# 更新/升级软件包，区别：update升级后会保留旧软件包，upgrade升级后会删除旧软件包 <br>\r\nyum groupinstall GroupName	# 安装程序组 <br>\r\nyum {remove | erase} PackageName	# 卸载软件包 <br>\r\nyum groupremove GroupName	# 卸载程序组 <br>\r\nyum search PackageName	# 查询指定软件包 或 yum list | grep PackageName <br>\r\nyum list updates	# 查询所有可升级的软件包 <br>\r\nyum list installed	# 查询所有已安装的软件包 <br>\r\nyum info PackageName	# 显示指定软件包的详细信息(版本、描述、大小，包括未安装的) <br>\r\nyum deplist PackageName	# 查询指定软件包的依赖情况 <br>\r\nyum grouplist	# 查询所有的程序组 <br>\r\nyum clean all	# 清除yum缓存 <br>\r\nyum makecache	# 生成yum缓存 <br>\r\nyum provides COMMAND	# 反查命名是由哪个安装包提供 <br>\r\nyum install --downloadonly --downloaddir=/root/rpm PackageName	# 下载指定软件包和相关依赖,–downloadonly只下载不安装，用于复制到不联网主机离线安装软件包：rpm -ivh /root/rpm/* --nodeps --force'),('Linux','使用技巧','Centos关闭Selinux默认配置','setenforce 0 && sed -i \'s/SELINUX=enforcing/SELINUX=disabled/\' /etc/selinux/config'),('Linux','使用技巧','Centos国内下载地址','https://www.centos.org/download/ <br>\r\nhttp://mirrors.aliyun.com/centos/ <br>\r\nhttp://mirrors.163.com/centos/'),('Linux','使用技巧','Centos更新yum update提示/boot空间不足：more space needed','解决方法： <br>\r\nuname -a            # 查询当前内核版本 <br>\r\nrpm -q kernel       # 查询系统中安装的内核版本;或使用 rpm -qa | grep kernel <br>\r\nrpm -e kernel-xx    # 卸载旧内核即可 '),('Linux','使用技巧','Centos静态IP配置','vi /etc/sysconfig/network-scripts/ifcfg-eth0 <br>\r\nTYPE=\"Ethernet\" <br>\r\nPROXY_METHOD=\"none\" <br>\r\nBROWSER_ONLY=\"no\" <br>\r\n#BOOTPROTO=\"dhcp\" <br>\r\nDEFROUTE=\"yes\"                  # 默认路由 <br>\r\nIPV4_FAILURE_FATAL=\"no\"\r\nIPV6INIT=\"no\"                   # 是否开启IPv6 <br>\r\nIPV6_AUTOCONF=\"yes\" <br>\r\nIPV6_DEFROUTE=\"yes\" <br>\r\nIPV6_FAILURE_FATAL=\"no\" <br>\r\nIPV6_ADDR_GEN_MODE=\"stable-privacy\" <br>\r\nNAME=\"eth0\" <br>\r\n#UUID=\"e1c6f4e0-0ab5-340b-a345-9f007347f67b\" <br>\r\nDEVICE=\"eth0\" <br>\r\nONBOOT=\"yes\"                    # 表示开机启动 <br>\r\n\r\nBOOTPROTO=\"static\"              # 设置获取IP模式 <br>\r\nIPADDR=\"192.168.1.100\"          # 设置静态IP <br>\r\nNETMASK=\"255.255.255.0\"         # 设置子网掩码 <br>\r\nGATEWAY=\"192.168.241.2\"         # 设置网关 <br>\r\nDNS1=\"223.5.5.5\"                # 设置DNS <br>\r\nDNS2=\"114.114.114.114\" <br>\r\nMACADDR=\"00:25:9e:80:ab:ac\"     # 设置MAC地址'),('Linux','使用技巧','chmod、chown、chgrp、setuid、setgid、sticky、setfacl权限管理','对于目录权限: <br>  \r\nr权限表示用户可以读取目录下面的文件列表；数字表示4 <br>\r\nw权限表示用户可以创建/修改/删除目录文件；数字表示2 <br>\r\nx权限表示用户可以进入该目录下；数字表示1 <br>\r\nchown -R        # 表示递归修改权限 <br>\r\nchgrp           # 修改文件所属组; 示例: chgrp centos /tmp <br>\r\nsetuid :        # 让执行文件的用户以该文件所属主的权限去执行; s或4来代表该权限 <br>\r\n示例：chmod u+s /bin/passwd 或 chmod 4xxx /bin/passwd ; 具有setuid属性的程序为-rwsr-xr-x <br>\r\nsetgid # 让执行文件的用户以该文件所属组的权限去执行; s或2来代表该权限 <br>\r\n注意: SetGID 针对文件的作用: 执行者要对该文件拥有x执行权限 <br>\r\n  SetGID 针对目录的作用: 普通用户在此目录中的有效组会变成此目录的所属组 <br>\r\n示例: chmod g+s /usr/bin/vim 或 chmod 2xxx /usr/bin/vim ;具有setgid属性的目录为drwxrwsr-x <br>\r\nsticky(粘滞位) # 让用户只能删除自己创建的文件,而不能删除其他用户的文件; root除外,root依然可以删除所有文件; t或1来代表该权限 <br>\r\n注意: 只对目录有效,用户要对该目录拥有w和x权限 <br>\r\n示例: chmod o+t /tmp 或 chmod 1xxx /tmp; 具有sticky属性的目录为drwxrwxrwt <br>\r\nACL（Access Control List）访问控制列表 <br>\r\nsefacl :-m,--modify-acl 新增或更改文件的访问控制列表; -x,--remove=acl 根据文件中访问控制列表移除指定条目; -b,--remove-all 删除文件所有访问控制列表条目; -d,--default  应用到默认访问控制列表的操作，仅对目录下新增的文件有效; -k,--remove-default 移除默认访问控制列表; -R,--recursive  递归操作子目录，仅对目录下现有文件有效 <br>\r\n示例：setfacl -m u:centos:rwx /etc/passwd <br>\r\nsetfacl -dm g:centos:rwx /etc <br>\r\nsetfacl -m m::r--                   # 设置除属主和other用户外，即group组的最大权限 <br>\r\nsetfacl -x u:centos /etc/passwd     # 移除文件中指定用户的acl权限 <br>\r\nsetfacl -b /etc/passwd              # 移除文件所有的acl权限  <br>\r\ngetfacl   # 获取查看文件的acl权限； 示例：getfacl /tmp/file1'),('Windows','使用技巧','Chrome常用扩展程序','Google 翻译 <br>Proxy SwitchyOmega <br>Octotree <br>IDM Integration Module <br>'),('Linux','使用技巧','continue和break中止循环','continue break 适用于for while until的循环控制; continue跳出当前循环继续下一个循环; break跳出所有循环'),('Linux','使用技巧','cur命令','cut 参数-c以字符为单位分符; -d自定义分隔符; -f显示哪个区域，常与-d一起使用; 示例:cut -c 1-3 /proc/uptime'),('Linux','使用技巧','date命令','date常用命令参数：date -R 显示系统时间和时区 <br>\r\n%Y%m%d yyyy年(00-12)月(00-31)日 示例：20190110 <br>\r\n%F = %Y-%m-%d <br>\r\n%H%M%S (00-23)小时(00-59)分(00-59)秒 示例：220805  <br>\r\n%T = %H:%M:%S <br>\r\n%u每周的第几天(1-7); %e每月的第几天(1-31); %k小时(0-23); %l小时(1-12)'),('Linux','使用技巧','dd命令','dd if=/tmp/ubuntu-amd64.iso of=/dev/sdb bs=1M 将ISO系统文件刻录进U盘，做启动盘; bs块大小,单位为字节 <br>\r\ndd if=/dev/zero of=/dev/sda 全部硬盘清零 <br>\r\ndd if=/dev/sda of=/dev/sdb 用第一块硬盘的内容覆盖第二块的内容 <br>\r\ndd if=/dev/urandom of=/dev/sda 往硬盘上写随机数据'),('Linux','使用技巧','Debian/Ubuntu将sh默认软链接从dash更改为bash','rm -f /bin/sh && ln -s /bin/bash /bin/sh  '),('Linux','使用技巧','Debian、Ubuntu apt 网络源配置','# Ubuntu x86_64 source_list : 20.04(focal) 18.04(bionic) <br>\r\ndeb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse <br>\r\ndeb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse <br>\r\ndeb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse <br>\r\ndeb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse <br>\r\ndeb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse <br>\r\n\r\n# Armbian arm64 Ubuntu 20.04(focal) source_list <br>\r\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ focal main restricted universe multiverse <br>\r\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse <br>\r\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse <br>\r\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse <br>\r\n\r\n# Debian x86_64 source_list : 10(buster) <br>\r\ndeb http://mirrors.aliyun.com/debian/ buster main non-free contrib <br>\r\ndeb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib <br>\r\ndeb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib <br>\r\ndeb http://mirrors.aliyun.com/debian-security buster/updates main <br>\r\n\r\n# Armbian arm64 Debian 10 source_list <br>\r\ndeb https://mirrors.ustc.edu.cn/debian/ buster main contrib non-free <br>\r\ndeb https://mirrors.ustc.edu.cn/debian/ buster-updates main contrib non-free <br>\r\ndeb https://mirrors.ustc.edu.cn/debian/ buster-backports main contrib non-free <br>\r\ndeb https://mirrors.ustc.edu.cn/debian-security/ buster/updates main contrib non-free <br>\r\n\r\napt -o Acquire::socks::proxy=\"socks5://192.168.20.20:1080\" update       # 下载国外源的软件时下载可以使用socks5代理来连接 <br>\r\napt remove kernel-xx && update-grub2    # 清除是内核，并更新引导 <br>'),('Linux','使用技巧','Debian、Ubuntu静态IP配置','# 配置IP、MAC、Gateway地址: <br>\r\nvi /etc/network/interface <br>\r\nallow-hotplug eth0 <br>\r\niface eth0 inet static <br>\r\naddress 192.168.3.175 <br>\r\nnetmask 255.255.255.0 <br>\r\ngateway 192.168.3.1 <br>\r\ndns-nameservers 223.5.5.5 114.114.114.114 <br>\r\nhwaddress ether xx.xx.xx.xx.xx.xx <br>\r\n# Ubuntu 18.04 Server版的网络管理工具已由原来的\"NetworkManger\"改成\"netplan\" <br>\r\n# netplan配置静态IP示例： <br>\r\nvi /etc/netplan/50-cloud-init.yaml <br>\r\nnetwork: <br>\r\nversion: 2 <br>\r\nethernets: <br>\r\neth0: <br>\r\ndhcp4: false <br>\r\naddresses: [192.168.3.189/24] <br>\r\ngateway4: 192.168.3.1 <br>\r\nnameservers: <br>\r\naddresses: [223.5.5.5, 114.114.114.114] <br>\r\nnetplan apply   # 提交生效'),('Linux','使用技巧','Debian国内下载地址','https://www.debian.org/distrib/ <br>\r\nhttp://mirrors.163.com/debian-cd/  <br>\r\nhttps://mirrors.aliyun.com/debian-cd/'),('Linux','使用技巧','Deiban/Ubuntu apt包管理工具','apt -y install PackageName	 # 安装软件 <br>\r\napt update	# 更新在线软件包列表 <br>\r\napt upgrade	# 升级所有可更新的软件包 <br>\r\napt upgrade PackageName	# 升级指定的软件包 <br>\r\napt {remove | purge} PackageName	# 卸载软件包；区别：remove保留配置文件，purge不保留配置文件 <br>\r\napt autoremove PackageName	# 卸载软件包和不需要的依赖包 <br>\r\napt list | grep PackageName	# 查询仓库中软件包 <br>\r\napt list --upgradable	# 查询可升级的软件包 <br>\r\napt list --installed	# 查询已安装的软件包 <br>\r\napt show PackageName	# 查询指定软件包的详细信息(版本、描述、大小，包括未安装的) <br>\r\napt clean	# 清除apt缓存 <br>\r\napt depends PackageName	# 查找指定软件包的依赖 <br>\r\napt rdepends PackageName	# 查找指定软件包被哪些软件依赖'),('Linux','使用技巧','Deiban/Ubuntu dpkg包管理工具','dpkg选项：-i表示install安装，-r表示remove移除，-I表示info信息，--force表示强制，-P表示purge清除(包括配置)，-L表示listfiles关联文件，-s表示status状态信息 <br>\r\ndpkg -i PackageName.deb	# 安装指定.deb软件包 <br>\r\ndpkg -c PackageName.deb	# 列出.deb软件包中的内容 <br>\r\ndpkg --unpack PackageName.deb	# 解出.deb软件包中的内容 <br>\r\ndpkg --configure PackageName.deb	# 配置.deb软件包 <br>\r\ndpkg -r/-P PackageName	# 卸载软件包；区别：-r不清除配置文件，-P会删除软件的同时清除相关配置文件 <br>\r\ndpkg -S COMMAND	# 查询命令是由哪个包提供,类似: yum provides <br>\r\ndpkg -L PackageName	# 查询软件所相关联的文件'),('Linux','使用技巧','echo passwd | sudo -S COMMAND 在脚本中使用sudo自动输入密码','-S(--stdin)在脚本中使用sudo时无法自动输入密码,使用此命令可以完成密码输入; <br>示例： echo ubuntu | sudo -S apt -y install tree'),('Linux','使用技巧','echo命令','echo \"$str\" 加双引号，输出和原格式一样，有换行则换行输出—建议常用 <br>\r\necho $str 不加双引号，将所有换行合并成一行，用空格代替换行;默认去除末尾的空格 <br>\r\necho \'$str\' 加单引号则原字符输出,示例:\'$str\' <br>\r\necho {a..b}{c..d}、echo str{1..5..2} 批量按顺序输出字符串,输出：ac ad bc bd、str1 str3 str5 <br>\r\necho -e 输出颜色格式：echo -e \"\\033[字背景色;字体颜色需要输出的字符串\\033[0m\" 中间不需要空格,0m关闭所有属性 <br>\r\n字背景颜色范围 (40-49)：40-黑色 41-红色 42-绿色 43-黄色 44-蓝色 45-紫色 46-深绿色 47-白色 <br>\r\n字体颜色范围 (30-39)：30-黑色 31-红色 32-绿色 33-黄色 34-蓝色 35-紫色 36-深绿色 37-白色 <br>\r\n示例： echo -e \"\\033[47;30m白底黑字的字符串\\033[0m\"'),('Linux','使用技巧','etherwake命令','etherwake -i eth0 e0:d5:5e:47:ca:ec 网络唤醒命; -i指定接口号; -b向广播地址发送唤醒魔包; -vv查看唤醒魔包内容'),('Linux','使用技巧','ethtools命令','ethtools eth1 # 查看网卡是否支持网络唤醒; Supports Wake-on: pumbg表示支持，d表示禁用 <br>\r\nethtool -s eth1 speed 100 duplex full autoneg off 临时设置网卡速率、关闭自动协商 <br>\r\nethtool -g eth1 查看网卡缓存 <br>\r\nethtool -G eth1 rx 4096 tx 4096 设置修改网卡缓存'),('Linux','使用技巧','eval命令','eval 将命令扫描多次执行 <br>\r\nsed_cmd=\"sed -i ${fuhao}25c ${java_path}$fuhao $HADOOP_CONF/hadoop-env.sh\" ; eval $sed_cmd  <br>\r\nsed中直接替换变量不能带特殊符号,例如/反斜杠,需要使用eval来实现'),('Windows','使用技巧','Excel中的单元格下拉框制作','数据---数据验证---允许:序列，并选择来源'),('Windows','使用技巧','Excel中的单元格内换行操作','Alt+Enter'),('Linux','使用技巧','expr命令','expr 5 + 6和$(($a * 2 + 1)) 数字算术计算,不能有字符串'),('Linux','使用技巧','fcsk命令','fcsk -p /dev/sdb1 检查磁盘错误并自动修复; 注意检查前需要先卸载该磁盘unmount /dev/sdb1'),('Linux','使用技巧','find命令','find 查找处理指定文件; -type表示文件类型; -name根据文件名查找(精确查找); -iname根据文件名查找但不区分大小写 <br>\r\n-and -or 多条件匹配;  <br>\r\n示例：find /tmpz -type f -name \"back*\" -ctime +5 -exec cp -f {} /tmp ;  <br>\r\n参数：{}表示查找到的内容 -uid/gid xx -user/group xx -empty -readable -maxdepth 1查找深度1表示不查找任何子目录 -size n[cwbkMG] -ls -delete表示找到后删除 -ok COMMAND表示执行命令前询问'),('Linux','使用技巧','Firewalld firewall-cmd防火墙','firewalld 区域zones: public(默认) dmz work internal home drop block external trusted <br>\r\n常用操作示例： <br>\r\nfirewall-cmd --get-services             # 获取防火墙所有的服务(包括已开启和未开启的) <br>\r\nfirewall-cmd --list-services            # 获取防火墙已开启的所有服务 <br>\r\nfirewall-cmd --list-ports               # 获取防火墙已开启的所有端口 <br>\r\nfirewall-cmd --list-all                 # 获取防火墙已开启的所有服务和端口等信息 <br>\r\nfirewall-cmd is-enabled sshd            # 检查某个服务是否在开机启动列表 <br>\r\nfirewall-cmd --permanent --zone=public --add-service=http [--add-port=80-88/tcp]    # 批量添加服务或端口 <br>\r\nfirewall-cmd --permanent --add-port={110/tcp,143/tcp}  # 添加多端口,注意多端口在{}中 <br>\r\nfirewall-cmd --permanent --zone=public --remove-port=80/tcp # 移除端口规则 <br>\r\nfirewall-cmd --permanent --add-masquerade      # 开启防火墙伪装，开启后才能进行端口转发; 还有--remove-masquerade --query-masquerade <br>\r\nfirewall-cmd --permanent --add-forward-port=port80:proto=tcp:toport8080 # 将本机tcp:80端口转发到本机的8080端口上 <br>\r\nfirewall-cmd --permanent --add-forward-port=port=80:proto=tcp:toport=88:toaddr=192.168.1.1    # 将本机tcp:80端口转发到192.168.1.1的88端口上;如果不改变目标端口去掉toport即可 <br>\r\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.1.0/24\" port protocol=\"tcp\" port=\"22\" accept\" # 仅允许指定ip或网段 指定port可访问 <br>\r\nfirewall-cmd --reload      # 重新加载'),('Linux','使用技巧','for语法','for 多变量的简写：for (( a=1, b=10; a <= 10; a++, b-- )) ; do echo \"$a:$b\" ; done或者 for a in $(seq 5) ; do echo $a ; done'),('Linux','使用技巧','grep命令','grep常用选项: -q判断条件而不用输出信息：echo \"yesesy\" | grep -q \"yes\" && echo yes <br>\r\n-c统计符合匹配条件的数量; -i忽略大小写; -n显示行号; -v排除指定条件 <br>\r\n-E指定多个条件匹配; 示例：grep -E \"ntp|password\" /tmp/syslog <br>\r\npgrep xx 根据命令关键字查找进程pid; -a显示进程PID及命令行; -d string按指定分隔符输出 <br>\r\n-i忽略大小写; -c统计数量; -n显示newest最新的指定进程; -o显示oldest最老的指定进程'),('Linux','使用技巧','hexdump命令','hexdump -vC -s 128 -n 256 xx.bin 读取十六进制文件; -C字节方式显示; -v不要省略相同行的内容; -s指定偏移量; -n显示指定字节数'),('Linux','使用技巧','history命令','history历史记录文件位置~/.bash_history,清除历史记录命令：history -c'),('Linux','使用技巧','hostnamectl设置主机名','hostnamectl set-hostname armbian'),('Windows','使用技巧','IDM：Internet Download Manager','# 官网：https://www.internetdownloadmanager.com/ <br>\r\n# 下载并安装好：http://www.kufile.net/space_qiuquan_7292.html? <br>\r\n# 打开安装谷歌浏览器和IDM一般会自动安装IDM插件,若未自动安装则需要手动安装 <br>\r\n    # 进入IDM安装目录,将IDMGCExt.crx复制出来,重命名为IDMGCExt.rar然后解压缩即可 <br>\r\n    # 打开Chrome的管理扩展程序---启用开发者模式---加载已解压的扩展程序:选择IDMGCExt解压目录即可'),('Linux','使用技巧','ifconfig命令','ifconfig eth1 192.168.1.100 netmask 255.255.255.0 # 临时设置IP地址 <br>\r\nifconfig eth1 down ; ifconfig eth1 hw ether 00:11:22:33:44:55 ; ifconfig eth1 up # 临时设置网卡MAC地址 <br>\r\nifconfig eth0 | awk \'/inet/ && /netmask/{print $2}\' | cut -d: -f2 # 提取网卡IP地址'),('Linux','使用技巧','if语法','if 语法简写一：if [ 1 = 1 ]; then echo yes; elif [ 2 = 3 ]; then echo no; else echo no; fi <br>\r\nif 语法简写二：[ -d /tmp ] || { echo \"dir is not exists!\" ; mkdir -p /tmp ; }'),('Windows','快捷方式','Internet属性选项','inetcpl.cpl'),('Linux','使用技巧','ip route路由命令','# ip route常用命令： <br>\r\nip route [list | show]                                      # 显示所有路由表 <br>\r\nip route list 192.168.0.0/24                                # 显示指定网络的路由表 <br>\r\nip route add default via 网关                               # 添加默认路由 <br>\r\nip route add [目标主机 | 目标网段/子网掩码] via 网关        # 添加路由规则格式 <br>\r\nip route [change | replace] 192.168.2.0/24 via 192.168.1.11 # 修改路由规则 <br>\r\nip route del [目标主机 | 目标网段/子网掩码 | default]       # 删除路由规则 <br>\r\nip route flush 192.168.2.0/24     # 清除指定网络的所有路由规则；常用于设置错网关清空重新配置 <br>\r\nip route add 192.168.2.0/24 via 192.168.1.15 metric 10      #  metric设置路由距离 <br>\r\n# route 操作示例： <br>\r\nroute {add | del} [-net 网段 | -host 主机]  netmask [255.x.x.x] [gw IP-ADDRESS | dev INTERFACE-NAME] <br>\r\nroute {add | del} default gw {IP-ADDRESS} {INTERFACE-NAME}      # 添加、删除默认网关路由格式 <br>\r\nroute {add | del} -net {NETWORK-ADDRESS} netmask {NETMASK} reject   # 添加、删除指定网络不可达规则，可避免连接时长等待 <br>\r\nroute add -net 192.168.3.0/24 gw 192.168.168.10        # 添加路由规则 <br>\r\nroute -n      <br>\r\n# Linux内核包含了路由转发功能，但并未开启 <br>\r\n# 临时开启： sysctl -w net.ipv4.ip_forward=1 或 echo 1 > /proc/sys/net/ipv4/ip_forward <br>\r\n# 永久开启:  vi /etc/sysctl.conf  <br>\r\nnet.ipv4.ip_forward = 1 <br>\r\nsysctl -p <br>\r\n\r\n# 需求：从外网通过局域网跳板机访问局域网中的其他电脑 <br>\r\n1、Linux内核开启 ip_forward 转发 <br>\r\n2、添加规则： iptables -t nat -A POSTROUTING -s 192.168.168.0/24 -j SNAT --to-source 192.168.3.178'),('Linux','使用技巧','iptable规则','iptables 命令参数： <br>\r\n-A,--append                 # 在最后一行下添加规则  <br>  \r\n-I,--insert                 # 在首行添加规则 <br>\r\n-F,--flush                  # 清空所有规则 <br>\r\n-D,--delete                 # 删除指定序号规则 <br>\r\n-R,--replace                # 替换指定的规则，需要指定规则序号；序号可通过--line查看 <br>\r\n-E                          # 重命名指定的自定义规则链 <br>\r\n-L,--list chain             # 列出/查看指定链的规则，若不指定则列出默认表的所有链规则 <br>\r\n-p                          # 指定协议protocol：tcp, udp, icmp, all ; (icmp --icmp-type 0表示ping回显应答 8表示ping回显请求) <br>\r\n-P                          # 指定默认规则 <br>\r\n-i                          # 入站接口in interfaces；示例：-i eth1 <br>\r\n-o                          # 出站接口outer interfaces；示例：-o eth2 <br>\r\n-s                          # 指定源IP地址source；示例：-s 192.168.1.0/24   <br>  \r\n--sport                     # 指定源端口; 排除端口使用\"！22\"格式;多端口使用\"88:90\"格式 <br>\r\n-d                          # 指定目标IP地址destination <br>\r\n--dport                     # 指定目标端口; 注意:指定源端口或目标端口时一定要加-p指定协议,否则iptable会报错 <br>\r\n-j      # 跳转target值：ACCEPT, DROP(丢弃), REJECT(拒绝), SNAT, DNAT, MASQUERADE(代替SANT --to-source IP 不固定，仅用于POSTROUTING链),REDIRECT(端口重定向) <br>\r\n-t table                    # 指定要操作匹配数据包的表; table: filter、nat、mangle、raw四种内建表 <br>\r\n\r\n示例： <br>\r\niptables -t nat -A POSTROUTING -s 192.168.168.0/24 -j SNAT --to-source 192.168.3.178 <br>\r\niptables -t nat -A PREROUTING -p tcp -d 192.168.1.10 --to-destinationdport 80 -j DNAT --to-destination 192.168.1.11:8080 <br>\r\niptables -t nat -A PREROUTING -p all --dport 7000:7500 -j DNAT --to-destination 192.168.1.11 <br>\r\niptables -t nat -R POSTROUTING 2 -d 192.168.0.0/24 -j SNAT --to-source 192.168.0.50 <br>\r\niptables -t filter -L INPUT -vn --line    <br>\r\niptables -A INPUT -i eth1 ! --dport 22 -j ACCEPT  # 在最后插入指定规则：排除22号端口外的请求都接受 <br>\r\niptables -P FORWARD DROP    # 设置默认规则 <br>\r\niptables -A FORWARD -m state --state ESTABLISHED -j ACCEPT   # 已建立的连接数据全部允许 <br>\r\niptables -A FORWARD -p tcp -s 192.168.10.0/24 --dport 80 -m state --state NEW -j ACCEPT    # 允许源地址访问指定目的端口的连接 <br>\r\niptables -t nat -F    # 清空nat链所有规则 <br>\r\niptables -t nat -A PREROUTING -p tcp -d 192.168.200.200 --dport 49454 -j DNAT --to-destination 192.168.200.229:81   # 源地址转换操作1，将外网端口映射到内网主机端口 <br>\r\niptables -t nat -A POSTROUTING -p tcp -d 192.168.200.229 --dport 81 -j SNAT --to-source 192.168.200.200:49454       # 源地址转换操作2，将目标主机返回的数据做一次目标地址转换返回给源主机'),('Linux','使用技巧','ip命令','ip -6 neigh 可以查询路由器下分配的ipv6地址 <br>\r\nip neigh flush dev eth0 清除Linux下网卡设备的arp缓存'),('Windows','快捷方式','IP地址、域名侦测','nslookup'),('Linux','使用技巧','killall、ifconfig、mkfs.vfat ：command not found','yum/apt install psmisc net-tools dosfstools'),('Linux','使用技巧','ldd命令','ldd $(which edge) 查看程序共享库的依赖关系; 需要程序的绝对路径; ldd命令不是可执行程序,而是个shell脚本'),('Linux','使用技巧','let命令','let id+=3 整数计算,表示id=id+3; 注意: let只能整数计算;使用变量不需要$符号'),('Linux','快捷方式','Linux中Bash内置变量','$0	获取当前执行脚本的名字，如带路径执行就包含路径 <br>\r\n$1~$9,${10}	位置参数 <br>\r\n$*	获取当前脚本所有的位置参数(合并在一起作为单个字符串) <br>\r\n$@	获取当前脚本所有的位置参数(每个位置参数都作为独立的字符串) <br>\r\n$#	获取当前脚本所有的位置参数的总个数 <br>\r\n$?	获取上一条命令的状态值，0为执行成功，非0为执行失败 <br>\r\n$$	获取执行脚本的PID进程号 <br>\r\n$!	运行在后台的最后一个作业的PID进程号 <br>\r\n$BASH	默认Shell文件的路径 <br>\r\n$BASH_VERSION	BASH版本 <br>\r\n$PATH	可执行程序文件的搜索路径,多路径用冒号分隔;示例:PATH=/usr/sbin:/usr/bin:/sbin:/bin <br>\r\n$UID	当前用户真实的ID号 <br>\r\n$EUID	有效用户ID <br>\r\n$GROUPS	目前用户所属的组 <br>\r\n$HOME	用户的家目录 <br>\r\n$HOSTNAME	主机名 <br>\r\n$HOSTTYPE	硬件类型;示例:x86_64,aarch64 <br>\r\n$PWD	当前的工作目录 <br>\r\n$OLDPWD	上一次进入工作的目录'),('Linux','使用技巧','Linux中rdesktop远程桌面命令','yum/apt install rdesktop <br>\r\n# rdesktop 使用示例:  <br>\r\nrdesktop -u username -p password -a 16 [-f | -g 1280x960] -r disk:share=/tmp -r sound:local -z IP/HostName:Port <br>\r\nrdesktop -u username -p password [-f | -g 1280x960] -r disk:opt=/opt -r sound:local -P -x l IP/HostName:Port <br>\r\n\r\n# 常用问题： <br>\r\n1、使用rdesktop提示： CredSSP: Initialize failed, do you have correct kerberos tgt initialized ? Failed to connect, CredSSP required by server. <br>\r\n解决方法：Windows系统属性---远程---远程桌面：勾选允许远程桌面, 不要勾选仅允许使用身份验证的计算机连接 <br>\r\n或修改本机组策略gpedit.msc：计算机配置---管理模板---Windows组件---远程桌面服务---远程桌面会话主机---安全---要求使用网络级别的身份验证对远程用户进行身份验证:未配置/已禁用 <br>\r\n2、使用rdesktop远程Windows时输入文本时鼠标消失的问题---系统默认系统鼠标指针为白色 <br>\r\n解决方法：控制面板---鼠标---指针---方案：黑色(系统方案) <br>\r\n3、远程Windows时，剪切板相互复制粘贴异常或失效 <br>\r\n解决方法：暂时无法修复'),('Linux','快捷方式','Linux中关系运算符','-eq	equal判断二个数值是否相等,=相等为true <br>\r\n-ne	not equal判断二个数值是否不等,!=不等为true <br>\r\n-gt	greater than判断左边数值是否大于右边,>大于为true <br>\r\n-lt	less than判断左边数值是否小于右边,<小于为true <br>\r\n-ge	greater than or equal判断左边数值是否大于或等于右边,>=大于或等于为true <br>\r\n-le	less than or equal判断左边数值是否小于或等于右边,<=小于或等于为true'),('Linux','快捷方式','Linux中变量字符串、替换、扩展操作','${#string}	提取$string变量的字符串长度 <br>\r\n${string:position}	在$string中, 从位置position开始向后提取子串，示例:${var: -3}表示从倒数第3个向右提取子串 <br>\r\n${string:position:length}	在$string中, 从位置position开始向后提取长度为length的子串 <br>\r\n${string#*sub}	从$string的开头, 删除从左第一个匹配到sub的子串及其左边所有的字符串 <br>\r\n${string##*sub}	从$string的开头, 删除从左最后一个匹配（从右边匹配第一个）到sub的子串及其左边所有的字符串 <br>\r\n${string%sub*}	从$string的结尾, 删除从右第一个匹配到sub的子串及其右边所有的字符串 <br>\r\n${string%%sub*}	从$string的结尾, 删除从右最后一个匹配（从左匹配第一个）到sub的子串及其右边所有的字符串 <br>\r\n${string/sub/replace}	使用replace来替换第一个匹配到的sub <br>\r\n${string//sub/replace}	使用replace来替换所有匹配到的sub <br>\r\n${string/#sub/replace}	如果$string的前缀匹配sub, 那么就用replace来代替匹配到的substring <br>\r\n${string/%sub/replace}	如果$string的后缀匹配sub, 那么就用replace来代替匹配到的substring <br>\r\nexpr index \"$string\" sub	从$string的中，查找sub的首字母出现的位置 <br>\r\n${string^^}	将$string中的小写字母转换成大写输出,并未改变$string的值 <br>\r\n${string,,}	将$string中的大写字母转换成小写输出,并未改变$string的值\r\n${var}	变量var的值, 与$var相同 <br>\r\n${#var}	输出变量var的长度 <br>\r\n${var-default}	如果var没有被声明, 那么临时赋值var=default，并没真正赋值给$var <br>\r\n${var:-default}	如果var没有被声明或值为空, 那么临时赋值var=default，并没真正赋值给$var <br>\r\n${var=default}	如果var没有被声明, 那么赋值给var=default，非临时赋值 <br>\r\n${var:=default}	如果var没有被声明或值为空, 那么赋值给var=default，非临时赋值 <br>\r\n${var+other}	同${var:+other} <br>\r\n${var:+other}	如果var不为空(有赋值),那么临时赋值var=other;如果var为空则不变 <br>\r\n${var?err_msgG}	如果var没被声明, 那么就输出err_msg错误信息 <br>\r\n${var:?err_msg}	如果var没被声明或为空, 那么就输出err_msg错误信息 <br>\r\n${!varprefix*}	匹配之前所有以varprefix开头进行声明的变量 <br>\r\n${!varprefix@}	匹配之前所有以varprefix开头进行声明的变量 <br>\r\n${var^}	将变量的$var首字母转成大写 <br>\r\n${var^^}	将变量的$var所有字母转成大写 <br>\r\n${var^,}	将变量的$var首字母转成小写 <br>\r\n${var,,}	将变量的$var所有字母转成小写'),('Linux','快捷方式','Linux中布尔运算符,说明：在[ ]中必须使用-a -o进行多重判断','!	非运算,条件表达式为true，则结果为false <br>\r\n-a	与运算,同&&,条件表达式都为true，则结果为true <br>\r\n-o	或运算,同||条件表达式有一个为true，则结果为true'),('Linux','快捷方式','Linux中文件操作符','-b	检测文件是否是块设备文件(硬盘,光驱…) <br>\r\n-c	检测文件是否是字符设备文件(鼠标,键盘,声卡…) <br>\r\n-d	检测文件是否是文件夹/目录 <br>\r\n-e	检测文件/目录是否存在 <br>\r\n-f	检测文件是否是普通文件 <br>\r\n-h -L	检测文件是否是符号链接 <br>\r\n-g	检测文件是否设置了SGID位 <br>\r\n-k	检测文件是否设置了粘着位(Sticky Bit) <br>\r\n-u	检测文件是否设置了SUID位 <br>\r\n-r	检测文件/目录是否有可读权限 <br>\r\n-w	检测文件/目录是否有可写权限 <br>\r\n-x	检测文件/目录是否有可执行权限 <br>\r\n-s	检测文件大小是否为空或大于0,不为空➾true <br>\r\n-S	检测文件是否是socket <br>\r\nf1 -nt f2	文件f1是否比f2新 <br>\r\nf1 -ot f2	文件f1是否比f2旧 <br>\r\nf1 -ef f2	文件f1是否和f2 是相同文件的硬链接 <br>\r\n!	非,反转上面所有测试的结果(如果没有给出条件则返回真)'),('Linux','快捷方式','Linux中算术运算符','+	加法,示例:expr $int1 + $int2 <br>\r\n-	减法,示例:expr $int1 - $int2 <br>\r\n*	乘法,示例:expr $int1 * $int2 <br>\r\n/	除法,示例:expr $int1 / $int2 <br>\r\n%	取余数,示例:expr $int1 % $int2 <br>\r\na=b	赋值,示例:a=$(expr $int1 % $int2) <br>\r\n$a = $b	判断二边数值或字符串是否相等 <br>\r\n$a != $b	判断二边数值是否不相等,不能判断字符串 <br>\r\n$a == $b	判断二边数值是否相等,不能判断字符串'),('Linux','快捷方式','Linux中逻辑操作符','||	逻辑或or操作符;前面命令执行成功则后面命令不执行；前面执行失败则后面执行 <br>\r\n&&	逻辑与and操作符;前面命令执行成功则后面命令执行;前面执行失败则后面不执行'),('Linux','使用技巧','Linux关闭GUI图形化界面','vi /etc/default/grub                        # 此步可不用操作 <br>\r\nGRUB_TIMEOUT=3   <br>                                            \r\nGRUB_CMDLINE_LINUX_DEFAULT=\"net.ifnames=0 quiet\" <br>\r\nGRUB_CMDLINE_LINUX=\"text\"     # 修改此值为text,可选 <br>\r\nupdate-grub <br>\r\nsystemctl get-default <br>\r\nsystemctl set-default multi-user.target     # 设置多用户字符界面为默认启动 <br>\r\nsystemctl set-default graphical.target      # 设置图形界面为默认启动 <br>\r\nreboot'),('Linux','使用技巧','Linux内核开启BBR功能','# BBR 是Google推出的新型TCP拥塞控制算法，可以显著地提高Linux服务器吞吐量和减少TCP连接的延迟;Linux内核4.10起已内置了bbr算法<br>\r\nvi /etc/sysctl.conf      # 添加下面二行，开启bbr功能 <br>\r\nnet.core.default_qdisc=fq <br>\r\nnet.ipv4.tcp_congestion_control=bbr <br>\r\nsysctl -p       # 保存生效 <br>\r\nlsmod | grep tcp_bbr      # 检查内核模块是否已加载tcp_bbr'),('Linux','快捷方式','Linux命令行内建字符集','[:lower:]	所有小写字母 <br>\r\n[:upper:]	所有大写字母 <br>\r\n[:alpha:]	所有字母 <br>\r\n[:digit:]	所有一位数字 <br>\r\n[:alnum:]	所有字母数字 <br>\r\n[:punct:]	所有的符号 <br>\r\n[:space:]	表示空白字符,包括空格和制表符 <br>\r\n^	反向匹配;示例：ls a[^[:dight:]]?? <br>\r\n. /xxx.sh	在全局环境变量中执行程序，等同于source /xxx.sh'),('Linux','快捷方式','Linux命令行的Ctrl+快捷方式','Ctrl + l	清屏，等同使用clear命令 <br>\r\nCtrl + a	移动到当前行的开头，相当vim中的^操作 <br>\r\nCtrl + e	移动到当前行的结尾，相当vim中的$操作 <br>\r\nCtrl + u	剪切光标所在处之前的所有字符（不包括自身），相当vim中的d^操作 <br>\r\nCtrl + k	剪切光标所在处之后的所有字符（包括自身），相当vim中的d$操作 <br>\r\nCtrl + d	删除光标所在处字符，相当vim中的x操作 <br>\r\nCtrl + y	粘贴 <br>\r\nCtrl + x&u	按住Ctrl的同时再先后按x和u，撤销上一步操作 <br>\r\nCtrl + s	挂起当前shell，暂停输入 <br>\r\nCtrl + q	重新启用挂起的shell <br>\r\nCtrl + d	logout注销当前的shell <br>\r\nCtrl + z	暂停程序，使用fg恢复暂停的程序 <br>\r\nCtrl + →	移动光标到后一个单词的开头 <br>\r\nCtrl + ←	移动光标到前一个单词的开头'),('Linux','使用技巧','lsblk命令','lsblk 查看磁盘分区'),('Linux','使用技巧','lsb_release命令','lsb_release -cs 获取系统的内核版本号; -a显示所有信息,示例：buster'),('Windows','使用技巧','LSI磁盘Raid卡IT和IR模式区别','Initiator Target (IT): HBA直通,不可组阵列 <br>\r\nIntegrated RAID (IR): 可组Raid阵列'),('Linux','使用技巧','mips、mipsle类型CPU架构的区别','mips是big-endian的mips架构,把低字节存放在内存的高位;<br>mipsle是little-endian的mips架构,把低字节存放在内存的低位'),('Linux','使用技巧','mount命令','mount 挂载格式： <br>\r\n挂载SMB：mount -t cifs -o username=root,password=root,rw,file_mode=0777,dir_mode=0777,vers=[2.0|1.0] //192.168.6.1/share_name /mnt/ # 注意：需要先安装apt/yum install cifs-utils <br>\r\n挂载NFS：mount -t nfs -o vers=[3|4] 192.168.200.200:/opt /media # 注意：需要先安装apt install nfs-common或yum install nfs-utils <br>\r\nmount -B /opt /mnt # -B --band可以将文件夹/文件挂载(绑定)到另一个文件夹/文件上 <br>\r\n取消挂载: umount /mnt # 参数可以使用挂载文件或被挂载文件都可'),('Linux','使用技巧','mysql常用操作','mysql -uroot -p -h ip/domain -e \"show databases;\" <br>\r\ncreate user \'USERNAME\'@\'localhost\' identified by \'PASSWORD\';   <br>\r\ngrant all privileges on DBNAME.* to \'USERNAME\'@\'%\' identified by \'PASSWORD\';  <br>\r\ncreate database if not exists DBNAME;   <br>\r\ninsert into DBNAME.TABLENAME (Name,Gender) value (\'xiaoming\',\'M\'),(\'xiaofan\',\'F\');    # 指定字段添加插入数据 <br>\r\nupdate DBNAME.TABLENAME set Course=\'xiangsheng\', Gender=\'M\' where name=\'xxx\';         # 修改指定数据库表中的数据 <br>\r\ndelete from DBNAME.TABLENAME where name=\'xx\' and course=\"xx\";             # 删除指定数据库表中的数据 <br>\r\nselect user,host,password,plugin from mysql.user where user=\'root\';       # 查询数据库; select * from mysql.user; <br>\r\nshow databases;                           # 查看所有数据库列表 <br>\r\nshow tables from DBNAME;                  # 查看数据库中的数据表列表 <br>\r\nshow create table DBNAME.TABLENAME;       # 显示建表语句; 场景:清除表中所有的数据,又保留字段操作:读取创建表语句---删除表---恢复创建表语句即可 <br>\r\ndesc DBNAME.TABLENAME;                    # 查看指定数据库表字段 <br>\r\nshow grants for \'USERNAME\'@\'%\';           # 查询指定用户权限 <br>\r\nflush table with read lock;               # 以只读方式锁定所有表 <br>\r\nflush logs;                               # 执行日志切割;指令后的二进制日志写入另一个新文件中 <br>\r\nunlock tables;                            # 释放锁表,恢复可读写状态 <br>\r\nshow binary logs;                         # 查看记录的二进制日志列表 <br>\r\npurge binary logs to \'mysql_bin.004\';     # 删除指定mysql_bin.004之前的二进制日志 <br>\r\nshow table status like \'user\' \\G;         # 查看表的存储状态信息，\\G表示以列显示更直观 <br>\r\nshow variables like \"%timeout%\";          # 查询数据库配置timeout参数 <br>\r\nshow variables like \"%character_set%\";    # 查看数据库字符集 <br>\r\nset global wait_timeout=60;               # 以此格式修改数据库配置参数 <br>\r\ndrop user \'USERNAME\'@\'%\';                 # 删除用户 <br>\r\ndrop database if exists DBNAME;           # 删除指定的整个数据库 <br>\r\ndrop table if exists DBNAME.TABLENAME;    # 删除指定的数据库中的指定表 <br>\r\nmysqldump -uroot -p --events --master-data=2 -x -F -A -B > /tmp/all_databases.sql   # 备份数据库 <br>\r\nmysql -uroot -p < /tmp/all_databases.sql        # 恢复数据库; 若备份时使用-B参数则恢复时不用指定恢复到指定的数据库名; 若备份时无使用-B参数则恢复时需要指定恢复到指定的数据库名 <br>\r\n# 完全备份所有数据库,不包括 information_schema、performance_schema 并压缩保存 <br>\r\nmysql -uroot -p\'root\' -e \"show databases\" | grep -Evi \"Database|information|performance\" | sed -r \'s#^([a-z].*$)#mysqldump -uroot -p\'root\' -B --events \\1 | gzip > /var/\\1.sql.gz#g\' | bash '),('Windows','使用技巧','NETSH网络配置工具命令','netsh: 允许从本地或远程显示或修改当前正在运行的主机网络配置 <br>\r\n语法：netsh [-a AliasFile] [-c Context] [-r RemoteMachine] [-u [DomainName]UserName] [-p Password | *] [Command | -f ScriptFile] <br>\r\n\r\n常用示例： <br>\r\n    netsh wlan show drivers     # 显示无线网卡的设备信息 <br>\r\n\r\n# Windows中配置 netsh 端口转发命令(以管理员身份运行cmd操作),操作步骤： <br>\r\n1、添加端口转发 <br>\r\nnetsh interface portproxy add v4tov4 listenport=x connectaddress=x.x.x.x connectport=x (listenaddress=x.x.x.x protocol=tcp 可省略) <br>\r\n说明： <br>\r\nlistenport=                 # 本机监听端口,传入端口 <br>\r\nconnectaddress=             # 目的主机(IP、域名),也可以是本机(127.0.0.1) <br>\r\nconnnectport=               # 目的主机端口 <br>\r\nlistenaddress=*             # 监听IP地址; 可指定仅监听指定IP; *星号表示监听所有地址(默认,可省略) <br>\r\nprotocol=tcp                # 暂只支持tcp转发(可省略) <br>\r\n2、删除端口转发 <br>\r\nnetsh interface portproxy delete v4tov4 listenport=x <br>\r\n3、查看端口转发 <br>\r\nnetsh interface portproxy show all  <br>         \r\nnetstat -ano | findstr :80  # 查看是否有监听端口; 若没有则检查IP Helper服务是否启动; 参考:https://www.freebuf.com/articles/system/176889.html <br>\r\n'),('Windows','使用技巧','NETSTAT网络连接状态命令','NETSTAT : 显示协议统计信息和当前 TCP/IP 网络连接。 <br>\r\n语法: NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval] <br>\r\n    -a            # 显示所有连接和侦听端口。 <br>\r\n    -e            # 显示以太网统计信息。此选项可以与 -s 选项结合使用。 <br>\r\n    -f            # 显示外部地址的完全限定域名(FQDN)。 <br>\r\n    -n            # 不将IP解析为域名,以数字形式显示地址和端口号。 <br>\r\n    -o            # 显示拥有的与每个连接关联的进程 ID。 <br>\r\n    -p proto      # 显示 proto 指定的协议的连接；proto: TCP、UDP、TCPv6 或 UDPv6。如果与 -s 选项一起用来显示每个协议的统计信息proto可以支持:IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6。 <br>\r\n    -q            # 显示所有连接、侦听端口和绑定的非侦听 TCP 端口。绑定的非侦听端口不一定与活动连接相关联。 <br>\r\n    -r            # 显示路由表。 <br>\r\n    -s            # 显示每个协议的统计信息。默认情况下，显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息; <br>\r\n    -t            # 显示当前连接卸载状态。 <br>\r\n    -x            # 显示 NetworkDirect 连接、侦听器和共享终结点。 <br>\r\n    -y            # 显示所有连接的 TCP 连接模板。无法与其他选项结合使用。 <br>\r\n    interval      # 重新显示选定的统计信息，各个显示间暂停的间隔秒数。按 CTRL+C 停止重新显示统计信息。如果省略，则 netstat 将打印当前的配置信息一次。 <br>\r\n示例: <br>\r\n    netstat -ano        # 显示所有连接,不解析IP\r\n'),('Windows','使用技巧','NET网络管理工具命令','net: 查看和管理网络的环境、服务、用户、登陆等信息内容 <br>\r\n语法: NET [ ACCOUNTS | COMPUTER | CONFIG | CONTINUE | FILE | GROUP | HELP | HELPMSG | LOCALGROUP | PAUSE | SESSION | SHARE | START | STATISTICS | STOP | TIME | USE | USER | VIEW ] <br>\r\n\r\n示例: <br>\r\nnet user    # 查看本机用户 <br>\r\nnet use     # 查看连接的共享目录 <br>\r\nnet use \\Server /del   # 清除共享目录 <br>\r\n    '),('Linux','使用技巧','nohup后台命令','sh test.sh & 将sh test.sh任务放到后台；使用Ctrl + C发送SIGINT信号，程序免疫 ；关闭session窗口发送SIGHUP信号，程序关闭 <br>\r\nnohup sh test.sh 将sh test.sh任务放到后台 ；使用Ctrl + C发送SIGINT信号，程序关闭 ；关闭session窗口发送SIGHUP信号，程序免疫 <br>\r\nnohup sh test.sh 2>&1 & 将sh test.sh任务放到后台，不再接收任何输入（标准输入），关闭输出，同时免疫SIGINT和SIGHUP信号'),('Linux','使用技巧','paste命令','paste 用于将多个文件按列合并到一起; -d表示指定分隔符; 示例:paste -d \" \" -s 1.txt'),('Linux','使用技巧','ping命令','ping 参数：-c 指定次数(windows是-n); -w deadline执行命令时间,单位秒，即超过执行时间就停止，不管-c次数'),('Linux','使用技巧','printf命令','printf 格式代输出命令参数：%s(字符串); %d(数字); %i(数字); %f(小数);  <br>\r\n示例：printf \"%-10s\" abc 默认向右对齐，-号表示向左对齐'),('Linux','使用技巧','ps命令','ps -eo pid,user,args 按指定格式输出所有进程'),('Linux','使用技巧','python、pip 安装配置','apt install python3-pip python3-distutils  <br>\r\n# 安装pip <br>\r\ncurl -o get-pip.py https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py <br>\r\n或 apt install python3-pip <br>\r\n# 升级pip,使用 --upgrade / -U   <br>\r\npip3 install --upgrade pip <br>\r\n# 临时更改pip源，使用参数 -i 临时指定, 安装包可指定版本;  <br>\r\n示例：pip install -i https://mirrors.163.com/pypi/simple \'setuptools>41.0.0\'\r\n# 永久更改pip源： <br>\r\nmkdir ~/.pip && vi ~/.pip/pip.conf <br>\r\n[global] <br>\r\nindex-url = https://mirrors.163.com/pypi/simple/        # 或 http://mirrors.aliyun.com/pypi/simple '),('Linux','使用技巧','read命令','read 读取输入的数据; -t指定等待时间; -p输入的内容提示; 示例：read -t 5 -p \"string1\" str'),('Linux','使用技巧','rev命令','rev 命令专门用来逆序输出每一行的内容，示例: echo abc | rev 结果为 cba'),('Windows','使用技巧','Route路由操作命令','ROUTE [-f] [-p] [-4|-6] command [destination] [MASK netmask]  [gateway] [METRIC metric]  [IF interface] <br>\r\n参数： <br>\r\n-f          清除所有网关项的路由表 <br>\r\n-p          永久生效，与 add 配置使用 <br>\r\ncommand     包括：print add delete change  <br>\r\n示例： <br>\r\nroute print     # 查看路由表 <br>\r\nroute -p add 192.168.3.0 mask 255.255.255.0 10.0.0.10   # 添加路由规则；-p永久生效，若无-p则临时生效，重启失效 <br>\r\nroute change 192.168.3.0 mask 255.255.255.0 10.1.1.10   # 修改路由规则 <br>\r\nroute delete 192.168.3.0                                # 删除路由规则 <br>\r\n'),('Linux','使用技巧','Rsync同步命令','# rsync常用参数： <br>\r\n-a # 以递归方式传输并保持所有文件属性,等于-rlptgoD <br>\r\n-t / -g / -o / -p / -l / -H             # 同步文件时间/属组/属主/权限/软链接/硬链接 <br>\r\n-r / -z   # 递归子目录/传输时压缩处理 <br>\r\n-u   # 仅同步有更新或修改的文件 <br>\r\n-n    # 显示需要同步的文件,而不真实同步 <br>\r\n-4 / -6 / -v / -q    # 使用IPv4/使用IPv6/详细输出/精简输出  <br>\r\n--delete      # 删除接收端存在而发送端已经不存在的文件; 注意：发送源目录不能带星号 <br>\r\n--exclude / --include                   # 排除或只包含指定文件 <br>\r\n--exclude-from / --include-from         # 从指定文件中读取 <br>\r\n--password-file=/etc/rsync.passwod      # 指定密码文件     <br>\r\n# 常用示例： <br>\r\nrsync -av -e \"ssh -p 222\" 192.168.204.168:/tmp/test.txt  /tmp/a.txt <br>\r\nrsync -tqr --delete /etc/cron.d /tmp '),('Windows','使用技巧','SC服务管理命令','语法示例: <br>\r\nsc create ScName binpath=\"C:frpc -c C:frpc.ini\" start=auto displayname=\"frpc_script不要用空格\"      # 创建服务;需要管理员身份运行CMD; <br>\r\nsc delete ScName                # 删除指定服务 <br>\r\nsc [start|stop] ServiceName     # 启动、停止指定服务 <br>\r\nsc qc ScName                    # 查询服务的配置信息 <br>\r\nsc config ScName start=[disable|auto|demand]    # 更改服务的启动类型: 禁用、自动启动、手动启动 <br>\r\nsc query                                        # 显示所有services & drivers服务 <br>\r\nsc query type= [driver|service|interact]        # 显示驱动程序、服务、未运行的服务 <br>\r\nsc query state= all                             # 枚举所有服务和驱动程序\r\n'),('Linux','使用技巧','sed命令','sed 中引用外部变量方法：使用单引号包含双引号 \' \" $str \" \' <br>\r\nsed \'{s/[0-9]//g ; s/[a-z]//g}\' 多条件处理 <br>\r\nsed -r \'s/^[ 	]+//g\' test.txt 去除文本中所有开头的空格和tab制表符 <br>\r\nsed -r \'s/[[:space:]]//g\' test.txt 去除文本中所有的空格 <br>\r\nsed \'s/[0-9]//g\' sed \'s/[a-z A-Z]//g\' 提取数字或字母，也可作判断数字或字母 <br>\r\nsed -i \'25c test txt\' test 将文本中的第25整行替换为test txt'),('Linux','使用技巧','shred命令','shred -f -n 8 /tmp/log* 销毁数据,删除文件并多次覆盖; -f强制写入; -n指定覆盖次数,以便数据无法恢复(乱码)'),('Linux','使用技巧','sort和uniq去重命令','sort -u和uniq去重的区别： <br>\r\nuniq只去除相邻的重复字符;  <br>\r\nsort -u可去除所有(相邻或不相邻)重复的字符 <br>\r\nsort -k2,2 表示按第二列排序'),('Linux','使用技巧','SSH、SCP命令','# SSH常用语法：ssh [-1246] [-p port] [-o option] [user@]hostname [command] <br>\r\n示例： <br>\r\n# 1、让远程设备执行命令格式：ssh user@remote_host \"command\" <br>\r\nssh -p 11100 -o StrictHostKeyChecking=no admin@xxy1.ltd /sbin/reboot <br>\r\n# 2、SSH正向代理: 若需在任何外网访问，则需要公网服务器使用ssh -fCNL做端口转发 <br>\r\n格式：ssh -fCNL [监听地址(可省略)]:[监听端口]:[localhost]:[local_port] [user@localhost] <br>\r\nssh -fCNR *:1234:localhost:11111 localhost      #在公网服务器做端口转发 <br>\r\nssh -p 1234 user@公网IP服务器                   #在外网访问公网服务器IP:1234端口则转发至内网服务器:11111; 注意(内网和公网服务器使用公钥登陆) <br>\r\n# 3、SSH反向代理：在外网访问内网服务器(让内网服务器主动连接公网服务器) --- 常用于内网穿透 <br>\r\n格式：ssh -fCNR [监听地址(可省略)]:[监听端口]:[localhost]:[local_port] [user@Server_IP] <br>\r\nssh -fCNR 1111:localhost:22 -o ServerAliveInterval=60 root@xxy1.ltd     #在内网服务器上操作 <br>\r\nssh -p 1111 user@localhost                                              #在公网服务器操作即可访问内网服务器 <br>\r\n# 4、SSH做Socks5代理：--- 常用于局域网代理上网 <br>\r\n格式：ssh -D [bind_address:]port root@host          # 在本地主机创建一个socks代理连接远端host上网，再在浏览器中设置代理即可 <br>\r\n# 5、让ssh客户端使用socks5代理连接远程机器；注意：依赖nc命令，具体可查看nc命令使用方法 <br>\r\nssh -o ProxyCommand=\"nc --proxy-type socks5 --proxy wzt.xxy1.ltd:1080 %h %p\" root@192.168.3.178 <br>\r\nssh -o ProxyCommand=\"nc -X 5 -x wzt.xxy1.ltd:1080 %h %p\" root@192.168.3.178 <br><br>\r\n# SCP基于SSH传输文件; 选项: -C允许压缩; -p保留原文件的修改时间，访问时间和访问权限; -P port指定远程端口; -o ssh_option传入ssh选项; -r递归整个目录; -l limit限制传输带宽;单位Kbit/s; -q静默模式,不显示传输进度条; -v详细方式显示输出 <br>\r\n示例: scp -C -r -P port -o stricthostkeychecking=no /tmp/frpc admin@frp.xx1.ltd:/tmp/ '),('Linux','使用技巧','sudoedit命令','sudoedit /etc/sudoers 只能使用sudoedit命令编辑此文件,否则出现语法错误 <br>\r\n配置格式示例：root	ALL=(ALL) 	ALL <br> debian ALL=(ALL:ALL) NOPASSWD: /bin/systemctl, /sbin/reboot  <br>第一个ALL表示所有主机，第二、三个ALL表示以xx用户和属组，最后表示运行指定命令'),('Linux','使用技巧','systemctl系统服务管理工具','# systemd常用服务管理命令: <br>\r\nsystemctl [start | stop | restart | reload | status] serviceName    # 启动/停止/重启/查询 服务 <br>\r\nsystemctl [enable | disable] serviceName                            # 设置服务是否开机启动 <br>\r\nsystemctl list-unit-files # 显示所有所有配置文件状态: enable已建立启动链接; disable未建立启动链接; static该配置文件没有[Install]部分（无法执行），只能作为其他配置文件的依赖; masked该配置文件被禁止建立启动链接 <br>\r\nsystemctl list-units                                                # 显示系统中正在运行的服务 <br>\r\nsystemctl list-unit --type=[service | target] --state=[running | dead | active | inactive | failed]   # 显示系统中 正在运行/未运行/启动失败 的服务 <br>\r\nsystemctl [is-active | is-enabled] serviceName                      # 判断服务是否在运行状态/是否开机启动 <br>\r\nsystemctl list-dependencies serviceName [--all]                     # 显示服务需要的依赖关系 <br>\r\nsystemd-analyze                                                     # 显示系统的启动时间(包括内核启动时间和用户程序启动时间) <br>\r\nsystemd-analyze blame                                               # 显示所有的服务启动时间 <br>\r\nsystemd-analyze critical-chain                                      # 显示系统的启动过程流'),('Linux','使用技巧','tac命令','tac 读取文本从最后一行开始读取; 和cat的作用相反'),('Linux','使用技巧','tar命令','tar压缩排除某文件/目录时使用--exclude 目录名/文件名,排除多个就添加多个此参数，且此选项必须放在打包目录前 <br>\r\n示例： <br>\r\ntar -zcvf /10gtek/backup$(date +%Y%m%d).tgz --exclude Photo Data <br>\r\ntar -zcvf /10gtek/backup$(date +%Y%m%d).tgz --exclude=/Data/Photo Data <br>\r\ntar -zxvf xxx.tgz -C /tmp 指定解压目录 <br>\r\ntar -tf xx.tgz 查看压缩文件中的文件列表 <br>\r\ntar -rvf xx.tar a.txt 向压缩包中追加新文件; 注意：仅tar格式可添加; tgz格式不能添加 <br>\r\ntar -xjvf xx.tar.bz2 解压tar.bz2格式文件; 需要先安装bzip2'),('Linux','使用技巧','tee命令','tee 命令可同时输出至屏幕和指定文件: echo xxx | tee /tmp/xx.txt 若指定文件不存在则自动创建，默认为覆盖写入文件，使用-a参数为追加写入文件'),('Linux','使用技巧','telnet命令','telnet 可用于测试端口是否开放; 格式：telnet host [port]  <br>\r\n如果出现Connection refused则端口未开放,否则端口开放'),('Linux','使用技巧','timedatectl修改系统时区','timedatectl set-timezone Asia/Shanghai '),('Linux','使用技巧','tr命令','tr 命令：-c反选字符; -d删除指定字符; 示例: tr -d [0-9 a-z A-Z]用来判断数字或字符'),('Linux','使用技巧','Ubuntu国内下载地址','https://ubuntu.com/download <br>\r\nhttp://mirrors.163.com/ubuntu-releases <br>\r\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/'),('Linux','使用技巧','Ubuntu重置root密码','# Ubuntu 20.04 重置root密码操作： <br>\r\n    1、开机时按 e 进入编辑引导界面 <br>\r\n    2、找到 linux  并在后面追加 rw init=/bin/bash ,完成后按 Ctrl+x 启动系统 <br>\r\n    3、mount        # 查看下 / 根目录是否可读写挂载; 如果是仅读，则执行：mount -o rw,remount / <br>\r\n    4、passwd root <br>\r\n    5、exec /sbin/init'),('Linux','使用技巧','ufw防火墙规则','# ufw：uncomplicated firewall --- Ubuntu自带 <br>\r\n# 常用操作： <br>\r\nufw [enable | disbale | reload | reset | version]       # 启动/禁用关闭(默认)/更新/重置/版本 <br>\r\nufw default [allow | deny]                              # 设置防火墙默认规则 <br>\r\nufw [allow | deny | reject] [service_name | port]       # 添加防火墙规则 <br>\r\nufw allow [1000:2000/tcp | 1000:2000/udp]               # 添加批量端口,需要指定tcp/upd协议 <br>\r\nufw [allow | deny] from 10.1.1.2[/24]                   # 允许指定IP(或网段)可访问主机所有端口 <br>\r\nufw [allow | deny] from 10.1.1.3 to any port 22         # 允许指定IP可访问指定端口 <br>\r\nufw status                                              # 查看防火墙状态 <br>\r\nufw status numbered                                     # 查看防火墙状态,显示编号 <br>\r\nufw status verbose <br>\r\nufw delete 3                                            # 按编号删除防火墙规则  <br>\r\nufw delete allow [ssh | 22]                             # 删除指定的防火墙规则 '),('Linux','使用技巧','unzip命令','unzip 解压zip格式文件; 参数：-n不覆盖同名文件; -o强制覆盖同名文件(默认); -q不输出信息; -d指定解压目录; 示例: unzip -q xx.zip'),('Linux','使用技巧','useradd、userdel、usermod用户管理命令','useradd 添加用户选项：-d指定家目录; -m创建主目录; -M不创建主目录; -u / -g指定UID、GID ;-r创建一个系统帐户; -s指定shell(/bin/bash、/bin/login、/bin/false、/usr/sbin/nologin)  <br>\r\n示例: useradd -m -s /bin/bash userxx  <br> \r\nuserdel 删除用户选项：-f强制删除(例如用户已登陆); -r删除用户的同时删除用户家目录(不带此目录则仅删除用户帐号)   <br>\r\n示例: userdel -f -r userxx  <br> \r\nusermod 修改用户选项：-d修改用户家目录; -m移动到用户修改后的家目录; -u/-g修改UID、GID; -s修改指定shell  <br>\r\n示例: usermod -s /usr/sbin/nologin userxx'),('Linux','使用技巧','while语法','while 语法简写：while [ true ] ; do echo yes ; echo no; break ; done'),('Windows','使用技巧','Windows 10防火墙开启允许Ping入本机操作','防火墙firewall.cpl---高级设置---入站设置---文件和打印机共享(回显请求-ICMPv4-in)：启用规则，允许响应Ping'),('Windows','使用技巧','Windows 2019 LTSC系统KMS激活操作','Windows 2019 LTSC 企业版，纯净不带频繁自动更新，激活操作(亲测有效)： <br>\r\n    1、按Win键输入cmd，并右键使用管理员权限打开cmd命令行窗口 <br>\r\n    2、安装适用于 Windows 10 LTSC 2019 正式版的GVLK密钥：slmgr -ipk M7XTQ-FN8P6-TTKYV-9D4CC-J462D <br>\r\n    3、为 Windows 10 LTSC 2019 正式版设定可用的KMS服务器：slmgr -skms kms.xxy1.ltd:35688 <br>\r\n    4、当成功安装GVLK和KMS后即可执行最后的步骤进行激活：slmgr -ato <br>\r\n    5、检查是否激活成功：slmgr -dlv'),('Windows','使用技巧','Windows 2019 LTSC系统开启图片浏览器功能','Windows 2019 LTSC系统默认关闭图片浏览器功能，手动开启步骤： <br>\r\n    1、打开`notepad.exe`，复制输入以下代码，并保存为`xxx.reg`格式，双击运行导入注册表即可 <br>\r\n        Windows Registry Editor Version 5.00 <br>\r\n        [HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindows Photo ViewerCapabilitiesFileAssociations] <br>\r\n        \".gif\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".jpg\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".jpeg\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".png\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".bmp\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".ico\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n        \".tif\"=\"PhotoViewer.FileAssoc.Tiff\" <br>\r\n    2、开启图片缩略图选项：打开`文件夹选项`---查看---取消勾选`始终显示图片，从不显示缩略图` '),('Windows','使用技巧','Windows Servere系统自带Team网口组合','Windows Server服务中网口组Team有三种模式： <br>\r\n    1、静态成组：也叫交换机依赖组，由于这种NIC组合需要交换机配置，所以NIC组中的所有适配器都必须连接到相同的交换机上面，不能分散在多个不同的交换机上。需要交换机支持IEEE802.3ad标准 <br>\r\n    2、交换机独立： 该组合不需要依赖交换机配置 <br>\r\n    3、LCAP： 802.ad链路汇聚控制协议（Link Aggregation Control Protocol，LACP），该组合可以自动将多个NIC组合成一股逻辑（虚拟）的网络适配器。需要交换机支持LACP，并设置为活动 <br>\r\n\r\n组成组后配置负载均衡模式： <br>\r\n    1、动态：流量可以通过一个叫做Flowlets的概念来实现动态LBFO，这个概念实际上就是将一个大的数据包分割成多个较小的数据包，通过不同NIC发送出去 <br>\r\n    2、Hpyer-V端口：如果你的服务器运行多个hyper-v虚拟主机的时候，建议使用此模式。当使用该模式后，虚拟机会将数据通过外部虚拟交换机发送到特定的NIC上，从而使数据有更好的预测性 <br>\r\n    3、地址哈希：NIC组接收到一个数据包后，首先对其进行检查，然后对目的地址的信息（如，IP地址、端口等）通过哈希算法，根据结果NIC组决定将数据包通过那个NIC发出。由于是通过哈希算法，无法控制流量走向，大量数据会流向同一个网卡 <br>\r\n\r\n常用操作：NIC组合---新建组---模式为：交换机独立；负载均衡为：动态---即可实现多网口聚合和冗余'),('Windows','使用技巧','Windows Server服务器版操作系统关闭密码复杂度检查','Windows Server服务器版操作系统默认要求设置复杂密码，可手动关闭密码复杂度检查 <br>\r\n1、Win+r 输入\"gpedit.msc\"打开\"本地组策略编辑器\"; 或者直接输入\"secpol.msc\"打开\"本地安全策略\" <br>\r\n2、计算机配置---Windows设置---安全设置---帐户策略---密码策略---密码必须符合复杂度要求---设置“已禁用”即可'),('Windows','使用技巧','Windows10中设置Intel X520网卡性能测试优化','# 需要更改以下设置性能测试可运行至9.8Gbps <br>\r\n    网卡属性---配置---高级---修改以下几项： <br>\r\n        传输缓冲区：512 ---> 1024或2048 <br>\r\n        接收缓冲区：512 ---> 1024或2048 <br>\r\n        巨桢数据包：禁用 ---> 9012字节'),('Windows','使用技巧','Windows7和2012开启Telnet Server功能','# Telnet默认端口23 <br>\r\n# Windows7和2012可支持开启Telnet服务端，Windows10不支持此功能了 <br>\r\n开启方法： <br>\r\n    1、控制面板---程序和功能---打开或关闭Windows功能(命令:optionalFeatures)---勾选Telnet服务器---确定 <br>\r\n    2、服务(services.msc)---Telnet---启动类型:自动---启动即可 <br>\r\n    3、计算机管理(命令:compmgmt.msc)---本地用户和组---组---TelnetClients添加用户\r\n'),('Windows','使用技巧','Windows中关闭任务栏的预览窗口','# 当鼠标放在任务栏上开启的图标上时,会自动弹出预览窗口,在经常切换任务栏中的窗口时可能会造成不便 <br>\r\n# Windows没有设置选项可以关闭任务栏预览,需要修改注册表来实现： <br>\r\n    1、Win+r 输入\"regedit\"打开\"注册表编辑器\" <br>\r\n    2、进入 HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerAdvanced 目录 --- 新建32位DWORD值,并命名为 ExtendedUIHoverTime , 将其值设置为 9000 <br>\r\n    3、进入 HKEY_CURRENT_USERSOFTWAREMicrosoftWindowsCurrentVersionExplorerTaskband 目录 --- 新建32位DWORD值,并命名为 NumThumbnails , 将其值设置为 0 <br>\r\n    4、重启计算机生效'),('Windows','使用技巧','Windows中将CMD命令输出至剪切板','COMMAND | clip'),('Windows','使用技巧','Windows中开启WOL网络唤醒功能','1、打开BIOS中的Wake On LAN、Resume By PCI-E Device、Resume By USB Device功能；关闭BIOS中的Low Power Mode、EuP功能 <br>\r\n2、在Windows中运行ncpa.cpl网络连接，点击 以太网 右键 属性---配置 <br>\r\n2.1、高级---修改属性中的 唤醒魔包 值为启用 <br>\r\n2.2、电源管理---勾选 允许此设备唤醒计算机  <br>\r\n3、在Windows中运行powercfg.cpl电源选项，点击选择电源按钮功能---更改当前不可用设置---取消勾选 启用快速启动---保存修改'),('Windows','使用技巧','Windows中批量ping所有网段获取arp信息','FOR /L %i IN (1,1,254) DO ping -w 2 -n 1 192.168.0.%i'),('Windows','使用技巧','Windows中挂载smb共享文件夹到指定目录下操作命令','mklink /d d:\\smb_dir \\\\192.168.200.250\\Share\\taobao <br>\r\n/d 表示创建目录软链接符号<br> \r\n/h 表示硬链接,而非符号链接(需要ntfs卷)<br>\r\n/j 表示创建目录关联(仅支持本地卷)'),('Windows','使用技巧','Windows创建无密码的SMB共享文件夹','1、在需要共享的文件夹上右键---属性---共享---点击中间的共享---输入Everyone添加,权限级别:读取与写入---点击共享(H)确认 <br>\r\n2、控制面板---网络与共享中心---更改高级共享设置---密码保护的共享:关闭密码保护共享 <br>\r\n3、运行gpedit.msc组策略---计算机配置---管理模板---网络---Lanman工作站---启用不安全的来宾登陆:已启动---确定'),('Windows','使用技巧','Windows安装VNC服务端','1、在VNC官网下载VNC Server 6.7.0 并安装在电脑上；下载地址：https://www.realvnc.com/en/connect/download/vnc/ <br>\r\n2、进入安装目录，打开 vnclicensewiz.exe --- Register offline --- 输入注册密钥，注册成功后重启即可 <br>\r\n    77NVU-D9G5T-79ESS-V9Y6X-JMVGA   --- 截止日期:2024-12-02 <br>\r\n3、登陆帐号为Windows登陆帐号密码，默认监听tcp和udp端口5900'),('Windows','使用技巧','Windows常用DOS操作命令','attrib	修改文件的属性+/-h只读属性 +/-s系统属性 +/-a存档属性 +/-r隐藏属性<br>\r\nd:	表示进入指定盘符<br>\r\ncd	同盘符中目录切换，cd ..表示进入上一线目录 cd \\表示进入根目录<br>\r\ndir	directory显示当前目录下的文件，/s,/p,/w,示例:dir *.bat?*表示通配符 ?表示任意单个字符<br>\r\nmd mkdir	make directory创建目录<br>\r\nrd rmdir	remove directory移除目录，选项：/s删除目录包括子目录或文件 /q安静模式，和/s一起使用删除不需要确认<br>\r\ndel	删除文件<br>\r\ncopy	复制文件<br>\r\nren rename	重命名文件<br>\r\nmove	移动文件<br>\r\ntype *.txt	显示文本文件的内容<br>\r\ntree	显示目录结构<br>\r\necho	显示字符串<br>\r\ncls	清屏<br>\r\nnet start scName	查看所有指定的服务；若不带服务名则查看所有启动的服务<br>\r\nipconfig	查看网络信息，选项:/all /renew /flushdns /displaydns /registerdns<br>\r\ntasklist	显示所有进程，示例:tasklist | findstr chrome.exe<br>\r\nroute print	查看路由表<br>\r\nschtasks	计划任务命令<br>\r\nsc	服务命令<br>\r\ntaskkill	结束进程，选项:/pid processpid根据pid来终止进程 /im imagename根据进程名来终止进程 -f强制终止 -t终止进程和子进程<br>\r\ntracert	路由跟踪，选项:-d不解析主机名 -h指定跟踪的最大跃点 -w指定超时等待时间 -4/6指定使用IPv4/v6<br>\r\nshell:startup	进入开机启动目录 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup<br>'),('Windows','使用技巧','Windows常用操作','1、系统属性sysdm.cpl---计算机名 / 高级(---环境变量) / 系统保护 / 远程(开启远程桌面) <br>\r\n2、组策略gpedit.msc---计算机配置---Windows设置---安全设置secpol.msc---本地策略---安全选项---禁用：帐户:使用空密码仅允许控制台登陆 <br>\r\n3、安全设置secpol.msc---帐户策略---密码策略---禁用：密码必须符合复杂性要求 <br>\r\n4、程序和功能appwiz.cpl---启用或关闭Windows功能optionalFeatures---勾选 SMB 1.0/CIFS File Sharing Support / Telnet服务器 <br>\r\n5、电源选项powercfg.cpl---更改计划设置---关闭：使计算机进入睡眠状态 <br>\r\n6、网络连接ncpa.cpl---以太网---配置---属性---电源管理---允许此设备唤醒计算机 <br>\r\n7、防火墙firewall.cpl---高级设置---入站设置---文件和打印机共享(回显请求-ICMPv4-in)：启用规则，允许响应Ping <br>'),('Windows','使用技巧','Windows清除DNS缓存','ipconfig /flushdns'),('Windows','快捷方式','Windows用户帐号','netplwiz'),('Windows','快捷方式','Windows系统中Ctrl+快捷操作方式','Ctrl + a	全选 <br>\r\nCtrl + c	复制 <br>\r\nCtrl + f	查找 <br>\r\nCtrl + o	打开 <br>\r\nCtrl + w	快速关闭当前窗口 <br>\r\nCtrl + n	快速新建一个当前窗口 <br>\r\nCtrl + s	保存 <br>\r\nCtrl + x	剪切 <br>\r\nCtrl + v	粘贴 <br>\r\nCtrl + z	撤销 <br>\r\nCtrl + +/-/0	放大页面/缩小页面/还原页面 <br>\r\nCtrl + Home	跳转到开头 <br>\r\nCtrl + End	跳转到结尾'),('Windows','使用技巧','Windows设置免登陆界面，直接进入系统桌面','1、Win+r 输入\"netplwiz\"打开\"用户帐号\" <br>\r\n2、取消勾选\"要使用本计算机，用户必须输入用户名和密码\"---确定即可'),('Windows','使用技巧','Windows访问SMB共享文件夹错误提示：你组织的安全策略阻止未经身份验证的来宾访问','x.x.x.x提示：\"你不能访问此共享文件夹，因为你组织的安全策略阻止未经身份验证的来宾访问\" <br>\r\n    1、Win+r 输入\"gpedit.msc\"打开\"本地组策略编辑器\" <br>\r\n    2、计算机配置---管理模板---网络---Lanman工作站---启用不安全的来宾登陆---设置\"已启用\"即可'),('Windows','使用技巧','Windows远程桌面开启允许空密码登陆','windows开启远程桌面，默认不允许空密码登陆，需要手动开启: <br>\r\n1、Win+r 输入\"gpedit.msc\"打开\"本地组策略编辑器\" ；或者直接输入\"secpol.msc\"打开\"本地安全策略\"<br>\r\n2、计算机配置---Windows设置---安全设置---本地策略---安全选项---账户:使用空密码的本地账户只允许控制台登陆---设置\"已禁用\"确定即可\r\n'),('Windows','快捷方式','Windows防火墙','firewall.cpl'),('Windows','快捷方式','Win快捷操作方式','Win + 1~9	打开任务栏上相对应位置的程序<br>\r\nWin + d	显示桌面，最小化所有窗口（可返回原窗口）<br>\r\nWin + m	显示桌面，最小化所有窗口（不可返回原窗口）<br>\r\nWin + e	打开资源管理器<br>\r\nWin + f	打开资源管理器搜索功能<br>\r\nWin + l	快速锁定电脑<br>\r\nWin + r	打开运行框<br>\r\nWin/Alt + Tab	多任务窗口切换<br>\r\nWin + ↑/↓	最大化/一半 当前窗口<br>\r\nWin + ←/→	将当前窗口靠到屏幕的左/右两侧'),('Linux','使用技巧','zip命令','zip 压缩成zip格式文件; 示例: zip -q xx.zip a b c d.txt'),('Windows','使用技巧','下载Google Play上的apk应用网址','https://apkpremier.com/ <br>\r\nhttps://apknite.com/ <br>\r\nhttps://apkdl.in/ <br>\r\nhttps://sameapk.com/ <br>\r\nhttps://www.apkturbo.com/ <br>\r\nhttps://apkcombo.com/zh-cn/ <br>\r\nhttps://apkpure.com/cn/ <br>\r\nhttps://apk.support/'),('Windows','快捷方式','任务管理器','taskmgr'),('Windows','使用技巧','使用CH341A编程器读写SPI Flash操作指导','1 首先安装驱动程序 <br>\r\n2 将编程器夹子和SPI芯片连接好, 打开CH341A编程器软件 <br>\r\n3 备份固件： 点击读取 --- 保存：xx.bin格式 <br>\r\n4 擦除写入新固件操作： 点击擦除(注意：会马上弹出擦除成功提示,其实并未擦除成功,需要等候30秒左右,再操作下一步) --- 查空(一定要显示芯片为空白,再操作下一步) --- 打开:加载新固件 --- 编程 ---校验'),('Linux','系统安装','使用U盘安装Centos7.6到物理硬盘','1、使用UltrISO装Centos.iso刻录到U盘<br>\r\n注意：刻录后因Windows仅支持最大11位的U盘名(LABEL信息),U盘名从Centos 7 x86_64被变成Centos 7 x8<br>\r\n2、开机选择从U盘快速启动,进入安装界面<br>\r\n3、光标选中Install Centos,然后按 e 进入启动配置，显示如下：<br>\r\nsetparams \'Install CentOS 7\'<br>\r\nlinuxefi /images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\\x207\\x20x86_64 quiet<br>\r\ninitrdefi /images/pxeboot/initrd.img<br>\r\n方法一：linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\\x207\\x20x8 quiet       # 修改成Windows的U盘信息，x20表示空格<br>\r\n方法二：linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:/dev/sda4 quiet                     # 将LABEL改成盘符名（ls /dev 可获取盘符名）<br>\r\n若因分辨率问题造成无显示,可在quiet前添加 nomodeset 即可<br>\r\n4、修改完成按Ctrl+x开始启动即可<br>\r\n说明：若使用 Centos_Netinstall.iso来安装时,需要输入Installation Source URL:http://mirrors.aliyun.com/centos/7/os/x86_64/<br>\r\n参考：https://www.if-not-true-then-false.com/2014/centos-7-netinstall-guide/'),('Windows','使用技巧','删除Windows更新后的下载文件','C:\\Windows\\SoftwareDistribution\\Download'),('Windows','快捷方式','区域和语言','intl.cpl'),('Windows','使用技巧','在线加速下载国外资源网站','https://d.serctl.com/'),('Windows','使用技巧','在线绘制拓扑图、思维导图网站','https://www.freedgo.com/'),('Windows','快捷方式','声音','mmsys.cpl'),('Windows','快捷方式','屏幕分辨率','desk.cpl'),('Windows','快捷方式','屏幕键盘','osk'),('Windows','快捷方式','截图工具','snippingtool'),('Windows','快捷方式','打开或关闭Windows功能','optionalFeatures'),('Windows','快捷方式','控制面版','control'),('Windows','快捷方式','文件夹选项','control folders'),('Windows','快捷方式','文件资源管理器','explorer'),('Windows','快捷方式','日期和时间','timedate.cpl'),('Windows','快捷方式','本地安全策略','secpol.msc'),('Windows','快捷方式','本地服务','services.msc'),('Windows','快捷方式','本地用户和组','lusrmgr.msc'),('Windows','快捷方式','桌面图标设置','rundll32.exe shell32.dll,Control_RunDLL desk.cpl,,0'),('Windows','快捷方式','注册表','regedit'),('Linux','使用技巧','清除内存页面缓存','sync ; echo 3 > /proc/sys/vm/drop_caches'),('Linux','快捷方式','清除当时屏幕内容','Ctrl + l 等同使用 clear 命令'),('Windows','快捷方式','电源选项','powercfg.cpl'),('Windows','快捷方式','磁盘管理','diskmgmt.msc'),('Windows','快捷方式','程序和功能','appwiz.cpl'),('Windows','快捷方式','系统信息和版本','msinfo32 winver'),('Windows','快捷方式','系统属性','sysdm.cpl'),('Windows','快捷方式','组策略','gpedit.msc'),('Windows','快捷方式','统启动配置实用程序','msconfig'),('Windows','快捷方式','网络连接','ncpa.cpl '),('Windows','快捷方式','计算机管理','compmgmt.msc'),('Windows','快捷方式','设备管理器','devmgmt.msc'),('Windows','快捷方式','资源监视器','resmon'),('Windows','快捷方式','远程桌面连接','mstsc'),('Linux','使用技巧','随机获取正整数','head -n 5 /dev/urandom | tr -cd 1-9 | head -c 3');
/*!40000 ALTER TABLE `Record` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping events for database 'os'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-03-15 15:30:58
